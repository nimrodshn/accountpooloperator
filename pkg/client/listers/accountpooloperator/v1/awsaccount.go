/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/nimrodshn/accountpooloperator/pkg/apis/accountpooloperator/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AWSAccountLister helps list AWSAccounts.
type AWSAccountLister interface {
	// List lists all AWSAccounts in the indexer.
	List(selector labels.Selector) (ret []*v1.AWSAccount, err error)
	// AWSAccounts returns an object that can list and get AWSAccounts.
	AWSAccounts(namespace string) AWSAccountNamespaceLister
	AWSAccountListerExpansion
}

// aWSAccountLister implements the AWSAccountLister interface.
type aWSAccountLister struct {
	indexer cache.Indexer
}

// NewAWSAccountLister returns a new AWSAccountLister.
func NewAWSAccountLister(indexer cache.Indexer) AWSAccountLister {
	return &aWSAccountLister{indexer: indexer}
}

// List lists all AWSAccounts in the indexer.
func (s *aWSAccountLister) List(selector labels.Selector) (ret []*v1.AWSAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AWSAccount))
	})
	return ret, err
}

// AWSAccounts returns an object that can list and get AWSAccounts.
func (s *aWSAccountLister) AWSAccounts(namespace string) AWSAccountNamespaceLister {
	return aWSAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AWSAccountNamespaceLister helps list and get AWSAccounts.
type AWSAccountNamespaceLister interface {
	// List lists all AWSAccounts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AWSAccount, err error)
	// Get retrieves the AWSAccount from the indexer for a given namespace and name.
	Get(name string) (*v1.AWSAccount, error)
	AWSAccountNamespaceListerExpansion
}

// aWSAccountNamespaceLister implements the AWSAccountNamespaceLister
// interface.
type aWSAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AWSAccounts in the indexer for a given namespace.
func (s aWSAccountNamespaceLister) List(selector labels.Selector) (ret []*v1.AWSAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AWSAccount))
	})
	return ret, err
}

// Get retrieves the AWSAccount from the indexer for a given namespace and name.
func (s aWSAccountNamespaceLister) Get(name string) (*v1.AWSAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsaccount"), name)
	}
	return obj.(*v1.AWSAccount), nil
}
